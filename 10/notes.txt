KADANE'S ALGORITHM 

maximum subarray -> leetcode 53

method 1 : brute force -> 02.cpp
method 2 : kadane's algorithm -> 03.cpp (most optimized)

KADANE's algo, this is a dynamic programming algorithm:

intution : rather than adding a bigger negative numebr , reset the sum to zero

PAIR SUM: 

returning the pair in the sorted array with the target sum 

1. brute force approach : O(n^2) -> 04.cpp
2. 2 pointer approach : 0(n) -> 05.cpp

MAJORITY ELEMENT

it is the element int eh array that appears floor(n/2) times in the array
assumption : the majority element always exists 

1. Brute force approach : -> 06.cpp
2. Better approach -> 07.cpp
3. Best approach -> 08.cpp

MOORE'S VOTING ALGORITHM

dont even dort the array teh majority element will always have the frequency greater than the second majority element
hence just compare the frequencies rather than calculating them