BITWISE OPERATORS 

these operators do operations on the decimal form of numbers 

1. Bitwise & (AND)
0 & 0 -> 0
1 & 0 -> 0
0 & 1 -> 0
1 & 1 -> 1

2. Bitwise | (OR)
0 | 0 -> 0
1 | 0 -> 1
0 | 1 -> 1
1 | 1 -> 1

3. Bitwise ^ (XOR)
0 ^ 0 -> 0
1 ^ 0 -> 1
0 ^ 1 -> 1
1 ^ 1 -> 0

4. Bitwise << (Left Shift)
n << 1 -> every bit sifts to the left by one place and the empty space are filled by 0
a << b this is basically a * 2^b 

4. Bitwise >> (Right Shift)
n >> 1 -> every bit sifts to the right by one place and the empty space are filled by 0
a >> b this is basically a/2^b

OPEARTOR PRECEDENCE 

! , ++ , --
* , / , %
+ , -
< , <= , >=, >
== , != 
&&
||
= (assignment operator)

for operators of equal precedence law of associativity is followed

SCOPE OF VARIABLES

local -> variables defined in if - else , loops , function , block of code {}
global -> varaibles that can be accesses throughout the file


DATA TYPE MODIFIERS 

change meaning of data types (they depend upon system used)

1. long -> used with int and double >= 4 bytes (from -2^31 to 2^31-1 to -2^63 to 2^63 -1)
2. short -> <= 2
3. long long -> >= 4
4. singned -> by default int is signed (both +vs and -ve can be used)
5. unsigned ->